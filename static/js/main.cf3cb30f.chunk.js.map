{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,uDAKE,WAA2B,IAAD,OACxBC,SACGC,iBAAiB,SAAS,SAACC,GAC1B,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAR1C,kCAYE,WACEJ,SACGK,oBAAoB,SAAS,iBAdpC,oBAiBE,WACE,IAAQN,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAU,mCACsBA,EADtB,KAEN,kCAzBf,GAAyBS,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.cf3cb30f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.PureComponent {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document\n      .addEventListener('keyup', (event: KeyboardEvent) => {\n        this.setState({ pressedKey: event.key });\n      });\n  }\n\n  componentWillUnmount(): void {\n    document\n      .removeEventListener('keyup', () => {});\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? (`The last pressed key is [${pressedKey}]`)\n            : ('Nothing was pressed yet')}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}